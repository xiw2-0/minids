syntax = "proto3";

package minidfs;

//////////////////////
/// RPC
//////////////////////

/// \brief Block information
message Block {
    int32 blockID = 1;
    int64 blockLen = 2;
} 

/// \brief Chunkserver info
message ChunkserverInfo {
    string chunkserverIP = 1;
    int32 chunkserverPort = 2;
}

/// \brief Associate each block with several chunkservers
message LocatedBlock {
    Block block = 1;
    repeated ChunkserverInfo chunkserverInfos = 2;
}

/// A sequence of located blocks, usually returned as the response of getBlockLocations()
message LocatedBlocks {
    repeated LocatedBlock locatedBlks = 1;
}

message BlkIDs {
    repeated int32 blkIDs = 1;
}

/// Report blocks in chunkserver
message BlockReport {
    ChunkserverInfo chunkserverInfo = 1;
    repeated int32 blkIDs = 2;
}

/// Command from Master to instruct the chunkserver to copy (or other operatoin) the block to other nodes
message BlockTask {
    int32 operation = 1;
    LocatedBlock locatedBlk = 2;
}

/// Blocks' instructions
message BlockTasks {
    repeated BlockTask blkTasks = 1;
}



//////////////////////
/// Name System
//////////////////////


/// \brief Inode records the basic info about a file/dir
message Inode {
    int32 id = 1;
    string name = 2;
    bool isDir = 3;
    repeated Block blks = 4;
}

message InodeSection {
    repeated Inode inodes = 1;
}

/// \brief Dentry records the structure of the directories.
message Dentry {
    int32 id = 1;
    repeated int32 subDentries = 2;
}

message DentrySection {
    repeated Dentry dentries = 1;
}

/// \brief This will be serialized to local file
message NameSystem {
    int32 maxDfID = 1;
    int32 maxBlkID = 2;
    InodeSection inodeSection = 3;
    DentrySection  dentrySection = 4;
}